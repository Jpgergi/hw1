name: GitHub Classroom Workflow

on: [workflow_dispatch,issue_comment]
env: 
      BUILD_TYPE: Release 

jobs:
      build:
        name: Autograding
        runs-on: ubuntu-latest
     #   if: ${{(github.event.issue.pull_request) && contains(github.event.comment.body,'/eval')}}
        strategy:
              max-parallel: 1
        steps:
          - uses: actions/checkout@v2
         # - name: greeting
         #   run: gh pr comment ${{github.event.issue_number}} -b "Please wait a few minutes. The grade will be displayed below"
         #   env:
         #        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          - name: Cache boost
            uses: actions/cache@v2
            id: cache-boost
            with:
             path: "~/boost"
             key: libboost1.71-dev
          - name: install boost
            env:
                  CACHE_HIT: ${{steps.cache-boost.outputs.cache-hit}}
                  BOOST_VERSION: ${{secrets.BOOST_VERSION}}
            run: |
                   if [[ "$CACHE_HIT" == 'true' ]]; then
                        sudo cp --verbose --force --recursive ~/boost/* /
                   else
                     mkdir -p ~/boost
                     sudo apt-get install -y libboost1.71-dev
                     sudo dpkg -L libboost1.71-dev | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/boost/
                   fi
          #- name: check boost
          #  run: ls -l /usr/include
          - name: build
            run: sh build.sh
          - name: anno1
            run: |
                  text="88/100"
                  echo "::notice ::$text"
          - name: autograding
            uses : education/autograding@v1
          #- name: status
          #  run: sh status.sh
          #  env:
          #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          - uses: actions/upload-artifact@v2
            if: ${{always()}}
            with:
                  name: report
                  path: report.md
          - name: anno2
            run: |
                  text="This is an Error"
                  echo "::error $text"
         # - uses: EndBug/add-and-commit@v5
         #   with:
         #      add: "*"
         #   env: 
         #       GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}  
     # status:
     #   name: status
     #   runs-on: ubuntu-latest
     #   needs: [build]
        #if: "!contains(github.event.head_commit.message, 'GitHub')"
        # for some reason the below does not work
        #if: "!contains(github.event.actor,'github-classroom')"
     #   if : github.event.run_number > 4
     #   steps:
     #         - uses: actions/checkout@v2
              #- name: environ
              #  run: env
      #        - uses: actions/download-artifact@v2
       #         with:
        #              name: report
         #     - name: status
          #      run: sh status.sh
         #       env:
         #         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
              
